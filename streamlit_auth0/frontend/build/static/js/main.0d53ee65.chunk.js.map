{"version":3,"sources":["components/NavBar.js","utils/initFontAwesome.js","App.js","index.js"],"names":["NavBar","props","onRun","useAuth0","user","isAuthenticated","loginWithPopup","getAccessTokenSilently","logout","then","token","className","Container","Button","color","onClick","localOnly","initFontAwesome","library","add","faLink","faUser","faPowerOff","_","require","App","providerConfig","domain","clientId","redirectUri","window","location","origin","isEqual","state","Streamlit","setComponentValue","setState","this","id","StreamlitComponentBase","withStreamlitConnection","ReactDOM","render","document","getElementById"],"mappings":"gWAwEeA,EA/DA,SAACC,GACd,IAAIC,EAAQD,EAAK,MAAL,MAGZ,EAMIE,cALFC,EADF,EACEA,KACAC,EAFF,EAEEA,gBACAC,EAHF,EAGEA,eACAC,EAJF,EAIEA,uBACAC,EALF,EAKEA,OAuBF,OAXIH,EAHKE,IAIUE,MACf,SAACC,GACCN,EAAI,MAAYM,EAChBR,EAAME,MAIVF,GAAM,GAIN,yBAAKS,UAAU,iBACb,gCACE,kBAACC,EAAA,EAAD,CAAWD,UAAU,oBACjBN,GACA,kBAACQ,EAAA,EAAD,CACEC,MAAM,UACNH,UAAU,aACVI,QAAS,WACPT,EAAe,IAAIG,MAAK,WACtBP,GAAM,QALZ,iBAYDG,GACC,kBAACQ,EAAA,EAAD,CACEE,QAAS,WAtCnBP,EAAO,CAAEQ,WAAW,IACpBd,GAAM,KAoCE,gB,gCClDGe,MANf,WACEC,IAAQC,IAAIC,KACZF,IAAQC,IAAIE,KACZH,IAAQC,IAAIG,MCMVC,EAAIC,EAAQ,IAEhBP,I,IAEMQ,E,kDACJ,WAAYxB,GAAQ,IAAD,8BACjB,cAAMA,IAIRyB,eAAiB,CACfC,OAAQ,EAAK1B,MAAL,uBACR2B,SAAU,EAAK3B,MAAL,yBACV4B,YAAaC,OAAOC,SAASC,QARZ,EAWnB9B,MAAQ,SAACE,GACFmB,EAAEU,QAAQ7B,EAAM,EAAK8B,MAAM9B,QAC9B+B,IAAUC,kBAAkBhC,GAC5B,EAAKiC,SAAS,CAAEjC,KAAMA,MAZxB,EAAK8B,MAAQ,CAAE9B,KAAM,MAFJ,E,0CAkBnB,WACE,OACE,kBAAC,IAAkBkC,KAAKZ,eACtB,yBAAKa,GAAG,OACN,kBAAC,EAAD,CAAQtC,MAAO,CAAEC,MAAOoC,KAAKpC,e,GAvBrBsC,KA+BHC,cAAwBhB,GCzCvCiB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.0d53ee65.chunk.js","sourcesContent":["import React from \"react\";\n// styles\nimport \"./NavBar.css\";\n// eslint-disable-next-line\nimport {Button, Container,} from \"reactstrap\";\n\n// eslint-disable-next-line\nimport {useAuth0} from \"@auth0/auth0-react\";\n\nconst NavBar = (props) => {\n  var onRun = props['props']['onRun']\n\n  // eslint-disable-next-line\n  const {\n    user,\n    isAuthenticated,\n    loginWithPopup,\n    getAccessTokenSilently,\n    logout,\n  } = useAuth0();\n\n  const logoutWithRedirect = () => {\n    logout({ localOnly: true });\n    onRun(false);\n  }\n\n  const getAccessToken = () => {\n    return getAccessTokenSilently();\n  }\n\n  if (isAuthenticated) {\n    getAccessToken().then(\n      (token) => {\n        user['token'] = token;\n        onRun(user);\n      }\n    )\n  } else {\n    onRun(false)\n  }\n\n  return (\n    <div className=\"nav-container\">\n      <center>\n        <Container className=\"login-component\">\n          {!isAuthenticated && (\n            <Button\n              color=\"primary\"\n              className=\"btn-margin\"\n              onClick={() => {\n                loginWithPopup({}).then(() => {\n                  onRun(false)\n                })\n              }}\n            >\n              Sign Inâ€¦\n            </Button>\n          )}\n          {isAuthenticated && (\n            <Button\n              onClick={() => {\n                logoutWithRedirect()\n              }}\n            >Sign Out\n            </Button>\n          )}\n        </Container>\n      </center>\n    </div>\n  );\n};\n\nexport default NavBar;\n\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faLink, faPowerOff, faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction initFontAwesome() {\n  library.add(faLink);\n  library.add(faUser);\n  library.add(faPowerOff);\n}\n\nexport default initFontAwesome;\n","import React from \"react\";\nimport {Auth0Provider} from \"@auth0/auth0-react\";\nimport NavBar from \"./components/NavBar\";\n\nimport {Streamlit, StreamlitComponentBase, withStreamlitConnection,} from \"streamlit-component-lib\"\n\n// styles\nimport \"./App.css\";\n\n// fontawesome\nimport initFontAwesome from \"./utils/initFontAwesome\";\n\nvar _ = require('lodash');\n\ninitFontAwesome();\n\nclass App extends StreamlitComponentBase {\n  constructor(props) {\n    super(props)\n    this.state = { user: null };\n  }\n\n  providerConfig = {\n    domain: this.props['args']['auth_setup']['domain'],\n    clientId: this.props['args']['auth_setup']['clientId'],\n    redirectUri: window.location.origin,\n  };\n\n  onRun = (user) => {\n    if (!_.isEqual(user, this.state.user)) {\n      Streamlit.setComponentValue(user)\n      this.setState({ user: user })\n    }\n  }\n\n  render() {\n    return (\n      <Auth0Provider {...this.providerConfig}>\n        <div id=\"app\">\n          <NavBar props={{ onRun: this.onRun }}/>\n        </div>\n      </Auth0Provider>\n    );\n  }\n}\n\n// export default App;\nexport default withStreamlitConnection(App)\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}